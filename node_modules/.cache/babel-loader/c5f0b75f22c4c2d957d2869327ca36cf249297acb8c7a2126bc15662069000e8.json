{"ast":null,"code":"var _jsxFileName = \"/home/hp/Music/react/expenseTracker/ExpenseTrackerUI/src/App.js\",\n  _s = $RefreshSig$();\nimport NewExpense from './Expense/NewExpense/NewExpense';\nimport './App.css';\nimport Expenses from './Expense/Expenses';\nimport { useState } from 'react';\nimport ExpensesFilter from './Expense/ExpenseFilter/ExpenseFilter';\nimport ExpenseItem from './Expense/ExpenseItem';\nimport Chart from './Chart/Chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar expenseList = [{\n  id: 'e1',\n  title: 'Toilet Paper',\n  amount: 94.12,\n  date: new Date(2020, 7, 14)\n}, {\n  id: 'e2',\n  title: 'New TV',\n  amount: 799.49,\n  date: new Date(2021, 2, 12)\n}, {\n  id: 'e3',\n  title: 'Car Insurance',\n  amount: 294.67,\n  date: new Date(2021, 2, 28)\n}, {\n  id: 'e4',\n  title: 'New Desk (Wooden)',\n  amount: 450,\n  date: new Date(2021, 5, 12)\n}];\nvar dataPoints = [{\n  value: 0,\n  label: \"Jan\",\n  maxValue: 0\n}, {\n  value: 0,\n  label: \"Feb\",\n  maxValue: 0\n}, {\n  value: 0,\n  label: \"Mar\",\n  maxValue: 0\n}, {\n  value: 0,\n  label: \"Apr\",\n  maxValue: 0\n}, {\n  value: 0,\n  label: \"May\",\n  maxValue: 0\n}, {\n  value: 0,\n  label: \"Jun\",\n  maxValue: 0\n}, {\n  value: 0,\n  label: \"Jul\",\n  maxValue: 0\n}, {\n  value: 0,\n  label: \"Aug\",\n  maxValue: 0\n}, {\n  value: 0,\n  label: \"Sep\",\n  maxValue: 0\n}, {\n  value: 0,\n  label: \"Oct\",\n  maxValue: 0\n}, {\n  value: 0,\n  label: \"Nov\",\n  maxValue: 0\n}, {\n  value: 0,\n  label: \"Dec\",\n  maxValue: 0\n}];\nfor (data in expenseList) {\n  console.log(\"Nothing\");\n}\nfunction App() {\n  _s();\n  const [expenses, setNewExpenseList] = useState(expenseList);\n  //////////\n\n  const [yearSelected, setYear] = useState(\"2020\");\n  const filterHandler = year => {\n    console.log(year);\n    setYear(year);\n  };\n  var expensesListed = expenses.map(expense => {\n    console.log(expense.date.getFullYear());\n    if (yearSelected == expense.date.getFullYear()) {\n      for (dataPoint in dataPoints) {\n        if (dataPoint.label == expense.date.getMonth) {\n          dataPoint += expense.amount;\n        }\n      }\n      return /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: expense.title,\n        amount: expense.amount,\n        date: expense.date\n      }, expense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 24\n      }, this);\n    }\n  }).filter(item => item != undefined);\n  console.log(expensesListed);\n  if (expensesListed.length === 0) {\n    expensesListed = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No Expenses Found!!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 24\n    }, this);\n  }\n\n  //////////////////\n  console.log(\"APP.JS\");\n  ///////////////////\n\n  const newExpenseLoader = newExpenseData => {\n    const data = {\n      id: Math.random(),\n      ...newExpenseData\n    };\n    setNewExpenseList(prevState => {\n      return [data, ...prevState];\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Chart, {\n      expenseList: expensesListed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NewExpense, {\n      newExpenseLoader: newExpenseLoader\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      defaultYear: yearSelected,\n      filterYear: filterHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Expenses, {\n      expenseList: expensesListed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"SQKJRo/uycXhkWSBIiCkzP64r9o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["NewExpense","Expenses","useState","ExpensesFilter","ExpenseItem","Chart","jsxDEV","_jsxDEV","expenseList","id","title","amount","date","Date","dataPoints","value","label","maxValue","data","console","log","App","_s","expenses","setNewExpenseList","yearSelected","setYear","filterHandler","year","expensesListed","map","expense","getFullYear","dataPoint","getMonth","fileName","_jsxFileName","lineNumber","columnNumber","filter","item","undefined","length","children","newExpenseLoader","newExpenseData","Math","random","prevState","defaultYear","filterYear","_c","$RefreshReg$"],"sources":["/home/hp/Music/react/expenseTracker/ExpenseTrackerUI/src/App.js"],"sourcesContent":["import NewExpense from './Expense/NewExpense/NewExpense';\nimport './App.css';\nimport Expenses from './Expense/Expenses';\nimport { useState } from 'react';\nimport ExpensesFilter from './Expense/ExpenseFilter/ExpenseFilter'; \nimport ExpenseItem from './Expense/ExpenseItem';\nimport Chart from './Chart/Chart';\n\n\nvar expenseList = [\n  {\n      id: 'e1',\n      title: 'Toilet Paper',\n      amount: 94.12,\n      date: new Date(2020, 7, 14),\n    },\n    { id: 'e2', \n      title: 'New TV', \n      amount: 799.49, \n      date: new Date(2021, 2, 12) \n    },\n    {\n      id: 'e3',\n      title: 'Car Insurance',\n      amount: 294.67,\n      date: new Date(2021, 2, 28),\n    },\n    {\n      id: 'e4',\n      title: 'New Desk (Wooden)',\n      amount: 450,\n      date: new Date(2021, 5, 12),\n    }\n]\nvar dataPoints = [\n  {\n    value:0,\n    label:\"Jan\",\n    maxValue:0\n  },\n  {\n    value:0,\n    label:\"Feb\",\n    maxValue:0\n  },\n  {\n    value:0,\n    label:\"Mar\",\n    maxValue:0\n  },\n  {\n    value:0,\n    label:\"Apr\",\n    maxValue:0\n  },\n  {\n    value:0,\n    label:\"May\",\n    maxValue:0\n  },\n  {\n    value:0,\n    label:\"Jun\",\n    maxValue:0\n  },\n  {\n    value:0,\n    label:\"Jul\",\n    maxValue:0\n  },\n  {\n    value:0,\n    label:\"Aug\",\n    maxValue:0\n  },\n  {\n    value:0,\n    label:\"Sep\",\n    maxValue:0\n  },\n  {\n    value:0,\n    label:\"Oct\",\n    maxValue:0\n  },\n  {\n    value:0,\n    label:\"Nov\",\n    maxValue:0\n  },\n  {\n    value:0,\n    label:\"Dec\",\n    maxValue:0\n  }\n]\n\nfor(data in expenseList){\n  console.log(\"Nothing\")\n}\nfunction App() {\n  const [expenses,setNewExpenseList] = useState(expenseList)\n  //////////\n\n  const [yearSelected,setYear] = useState(\"2020\")\n\n    const filterHandler = (year) => {\n        console.log(year)\n        setYear(year)\n    }\n   \n    var expensesListed = expenses.map((expense) => {\n        console.log(expense.date.getFullYear())\n            if(yearSelected == expense.date.getFullYear()){\n                for(dataPoint in dataPoints){\n                  if(dataPoint.label == expense.date.getMonth){\n                    dataPoint += expense.amount;\n                  }\n                }\n                return <ExpenseItem key= {expense.id} title = {expense.title} amount = {expense.amount} date = {expense.date}></ExpenseItem>\n            }\n            \n            \n    }).filter((item)=> item != undefined)\n    \n    console.log(expensesListed)\n\n    if(expensesListed.length === 0){\n      expensesListed = <div>No Expenses Found!!!</div>\n    }\n\n  //////////////////\n  console.log(\"APP.JS\")\n  ///////////////////\n  \n  const newExpenseLoader = (newExpenseData) => {\n  \n    const data = {id:Math.random(),\n    ...newExpenseData}\n    \n    setNewExpenseList((prevState) => {\n      return ([\n        data,\n        ...prevState\n      ]);\n    })\n  }\n\n\n\n    return (\n      <div>\n        {/* <h2>This is it</h2> */}\n        <Chart expenseList = {expensesListed}></Chart>\n        <NewExpense newExpenseLoader = {newExpenseLoader}/>\n        <ExpensesFilter defaultYear = {yearSelected} filterYear = {filterHandler}></ExpensesFilter>\n        <Expenses expenseList={expensesListed}></Expenses>\n      </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}